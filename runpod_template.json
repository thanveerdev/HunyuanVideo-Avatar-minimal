{
  "name": "HunyuanVideo-Avatar Ultra-Low VRAM",
  "description": "üö® AI Avatar Video Generation with Universal VRAM Support (4GB to 24GB+)\n\nüéØ Features:\n‚Ä¢ Automatic VRAM detection and optimization\n‚Ä¢ Progressive quality scaling (Emergency to Maximum Quality modes)\n‚Ä¢ Web interface with real-time monitoring\n‚Ä¢ FastAPI backend for robust processing\n‚Ä¢ Supports all NVIDIA GPUs from GTX 1060 to RTX 4090\n‚Ä¢ Network volume for persistent output storage\n\nüåê Access:\n‚Ä¢ Web UI: Port 7860\n‚Ä¢ FastAPI: Port 80\n‚Ä¢ Auto-starts on container launch\n\n‚öôÔ∏è Optimization Modes:\n‚Ä¢ Emergency (‚â§4GB): 96px, 8s audio\n‚Ä¢ Ultra-minimal (4-6GB): 128px, 15s audio\n‚Ä¢ Ultra-low (6-8GB): 256px, 20s audio\n‚Ä¢ Balanced (12-16GB): 512px, 45s audio\n‚Ä¢ Maximum Quality (24GB+): 1024px, 120s audio",
  "dockerImage": "thanveerdev/hunyuan-video-avatar:latest",
  "dockerStartCmd": "/workspace/docker_startup_network_volume.sh",
  "containerDiskInGb": 50,
  "volumeInGb": 50,
  "volumeMountPath": "/workspace",
  "networkVolumeId": "REPLACE_WITH_YOUR_NETWORK_VOLUME_ID",
  "networkVolumeMountPath": "/network_volume",
  "ports": "7860/http,80/http",
  "env": [
    {
      "key": "RUN_MODE",
      "value": "web"
    },
    {
      "key": "VRAM_MODE", 
      "value": "auto"
    },
    {
      "key": "MODEL_BASE",
      "value": "/workspace"
    },
    {
      "key": "OUTPUT_BASE",
      "value": "/network_volume/outputs"
    },
    {
      "key": "PERSISTENT_STORAGE",
      "value": "/network_volume"
    },
    {
      "key": "GRADIO_CONCURRENCY_COUNT",
      "value": "1"
    },
    {
      "key": "GRADIO_MAX_THREADS",
      "value": "2"
    },
    {
      "key": "CUDA_LAUNCH_BLOCKING",
      "value": "1"
    },
    {
      "key": "TOKENIZERS_PARALLELISM",
      "value": "false"
    },
    {
      "key": "CUDA_MODULE_LOADING",
      "value": "LAZY"
    },
    {
      "key": "OMP_NUM_THREADS",
      "value": "4"
    }
  ],
  "startJupyter": false,
  "startSsh": true,
  "runJupyter": false,
  "jupyterPassword": "",
  "readme": "# üö® HunyuanVideo-Avatar Ultra-Low VRAM\n\n## üéØ Universal VRAM Support: 4GB to 24GB+\n\nThis container automatically detects your GPU and optimizes settings for the best quality possible.\n\n### üöÄ Quick Start\n\n1. **Container starts automatically** - No manual setup needed\n2. **Access web interface**: `https://your-pod-id-7860.proxy.runpod.net`\n3. **Upload image + audio** and generate your avatar video!\n4. **Outputs saved to 'videostore' network volume** for persistent storage\n\n### üìä Optimization Modes\n\n- **Emergency (‚â§4GB)**: 96px, 4 frames, 8s audio\n- **Ultra-minimal (4-6GB)**: 128px, 8 frames, 15s audio\n- **Ultra-low (6-8GB)**: 256px, 16 frames, 20s audio\n- **Low (8-12GB)**: 384px, 32 frames, 30s audio\n- **Balanced (12-16GB)**: 512px, 64 frames, 45s audio\n- **High Performance (16-24GB)**: 704px, 128 frames, 60s audio\n- **Maximum Quality (24GB+)**: 1024px, 256 frames, 120s audio\n\n### üåê Access Points\n\n- **Web Interface**: Port 7860 (Primary)\n- **FastAPI Backend**: Port 80\n- **SSH Access**: Port 22 (if enabled)\n\n### üíæ Persistent Storage\n\n- **Network Volume**: All outputs saved to `/network_volume/outputs`\n- **Persistent across pod restarts**: Your generated videos are never lost\n- **10GB capacity**: Stores hundreds of generated videos\n- **Organized structure**: Timestamped folders for easy management\n\n### üí° Usage Tips\n\n- **Images**: Use clear, front-facing photos (512px+ recommended)\n- **Audio**: Clean speech, 16kHz WAV format preferred\n- **Duration**: Match audio length to your GPU's VRAM capacity\n- **Quality**: System automatically uses best settings for your GPU\n- **Storage**: Check `/network_volume/outputs` for all generated content\n\n### üîß Advanced Options\n\nSet environment variables to override defaults:\n- `VRAM_MODE`: Set to `ultra_minimal`, `ultra_low`, `balanced`, etc.\n- `IMAGE_SIZE`: Override image resolution\n- `VIDEO_LENGTH`: Override video frame count\n- `INFERENCE_STEPS`: Override inference steps\n- `OUTPUT_BASE`: Change output directory (default: `/network_volume/outputs`)\n\n### üé¨ Example Workflow\n\n1. Upload a clear face photo\n2. Upload audio file (speech/voice)\n3. Add text prompt (optional): \"A person speaking naturally\"\n4. Click \"Generate Avatar Video\"\n5. Download your MP4 result!\n6. Find all outputs in `/network_volume/outputs`\n\n### üö® Memory Management\n\n- **Real-time monitoring**: VRAM usage displayed during generation\n- **Automatic cleanup**: Memory cleared between generations\n- **Emergency fallback**: Switches to CPU if GPU memory exhausted\n- **Progressive quality**: Reduces settings if memory pressure detected\n\n### üìã Supported GPUs\n\n- **Budget**: GTX 1060 6GB, RTX 3060 8GB\n- **Mid-range**: RTX 3070, RTX 4060 Ti\n- **High-end**: RTX 3080, RTX 4070, RTX 4080\n- **Enthusiast**: RTX 3090, RTX 4090, RTX 6000 Ada\n\n### üîç Troubleshooting\n\n- **Generation fails**: Check logs in terminal\n- **Out of memory**: Reduce audio length or use smaller images\n- **Slow generation**: Normal for lower VRAM modes\n- **Quality issues**: Try higher VRAM mode if available\n- **Storage full**: Clean up old outputs in `/network_volume/outputs`\n\n**üéâ Ready to create amazing avatar videos with persistent storage!**",
  "imageName": "thanveerdev/hunyuan-video-avatar:latest"
} 